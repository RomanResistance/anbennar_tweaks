is_adventurer = {
	OR = {
	
		#Greentide
		tag = B02
		tag = B03
		tag = B04
		tag = B05
		tag = B06
		tag = B07
		tag = B08
		tag = B09
		tag = B10
		tag = B11
		tag = B12
		tag = B13
		tag = B14
		tag = B15
		tag = B16
		tag = B17
		tag = B18
		tag = B19
		tag = B20
		
		#Aelantir
		tag = H42
		tag = H40
		tag = H50
		tag = H48
		tag = H46
		tag = H52
		tag = H44
		tag = H56
		tag = H54
		tag = H60
		tag = H58
		tag = H64
		tag = H62
		tag = H66
		
		#Dwarovar
		tag = H69
		tag = H70
		tag = H71
		tag = H96
		tag = H97
		tag = H98
		tag = H68
		tag = H95

	}
}

is_temple = {
	OR = {
		#Cannor
		tag = A10 #Minaran Temple
		tag = A41 #Damish Temple
		tag = A43 #Ryalan Temple
		tag = A53 #Aramari Temple
	}
}

has_no_ward_province_modifiers = {
	NOT = { has_province_modifier = magic_realm_abjuration_empowered_ward}
	NOT = { has_province_modifier = magic_realm_abjuration_ward}
	NOT = { has_province_modifier = magic_estate_ward_1 }
	NOT = { has_province_modifier = magic_estate_ward_2 }
	NOT = { has_province_modifier = magic_estate_ward_3 }
}

enhance_ability_cost_adm_trigger = {
	if = {
		limit = { adm = 0 }
		adm_power = 100
	}
	else_if = {
		limit = { adm = 1 }
		adm_power = 100
	}
	else_if = {
		limit = { adm = 2 }
		adm_power = 200
	}
	else_if = {
		limit = { adm = 3 }
		adm_power = 300
	}
	else_if = {
		limit = { adm = 4 }
		adm_power = 400
	}
	else_if = {
		limit = { adm = 5 }
		adm_power = 500
	}
}

enhance_ability_cost_dip_trigger = {
	if = {
		limit = { dip = 0 }
		dip_power = 100
	}
	else_if = {
		limit = { dip = 1 }
		dip_power = 100
	}
	else_if = {
		limit = { dip = 2 }
		dip_power = 200
	}
	else_if = {
		limit = { dip = 3 }
		dip_power = 300
	}
	else_if = {
		limit = { dip = 4 }
		dip_power = 400
	}
	else_if = {
		limit = { dip = 5 }
		dip_power = 500
	}
}

enhance_ability_cost_mil_trigger = {
	if = {
		limit = { mil = 0 }
		mil_power = 100
	}
	else_if = {
		limit = { mil = 1 }
		mil_power = 100
	}
	else_if = {
		limit = { mil = 2 }
		mil_power = 200
	}
	else_if = {
		limit = { mil = 3 }
		mil_power = 300
	}
	else_if = {
		limit = { mil = 4 }
		mil_power = 400
	}
	else_if = {
		limit = { mil = 5 }
		mil_power = 500
	}
}



province_with_farm_goods = {
	OR = {
		trade_goods = grain
		trade_goods = livestock
		trade_goods = wine
		trade_goods = spices
		trade_goods = tea
		trade_goods = coffee
		trade_goods = cocoa
		trade_goods = cotton
		trade_goods = sugar
		trade_goods = tobacco
		trade_goods = silk
	}
}


province_with_mineable_goods = {
	OR = {
		trade_goods = gold
		trade_goods = copper
		trade_goods = iron
		trade_goods = mithril
		trade_goods = gems
		trade_goods = salt
	}
}

province_with_urban_goods = {
	OR = {
		trade_goods = glass
		trade_goods = paper
		trade_goods = cloth
		trade_goods = chinaware
	}
}

is_abjuration_1 = {
		has_ruler_flag = abjuration_1
		NOT = { has_ruler_flag = abjuration_2 }
		NOT = { has_ruler_flag = abjuration_3 }
}

is_abjuration_2 = {
		has_ruler_flag = abjuration_2
		NOT = { has_ruler_flag = abjuration_3 }
}

is_abjuration_3 = {
		has_ruler_flag = abjuration_3
}

is_conjuration_1 = {
		has_ruler_flag = conjuration_1
		NOT = { has_ruler_flag = conjuration_2 }
		NOT = { has_ruler_flag = conjuration_3 }
}

is_conjuration_2 = {
		has_ruler_flag = conjuration_2
		NOT = { has_ruler_flag = conjuration_3 }
}

is_conjuration_3 = {
		has_ruler_flag = conjuration_3
}

is_divination_1 = {
		has_ruler_flag = divination_1
		NOT = { has_ruler_flag = divination_2 }
		NOT = { has_ruler_flag = divination_3 }
}

is_divination_2 = {
		has_ruler_flag = divination_2
		NOT = { has_ruler_flag = divination_3 }
}

is_divination_3 = {
		has_ruler_flag = divination_3
}

is_enchantment_1 = {
		has_ruler_flag = enchantment_1
		NOT = { has_ruler_flag = enchantment_2 }
		NOT = { has_ruler_flag = enchantment_3 }
}

is_enchantment_2 = {
		has_ruler_flag = enchantment_2
		NOT = { has_ruler_flag = enchantment_3 }
}

is_enchantment_3 = {
		has_ruler_flag = enchantment_3
}

is_evocation_1 = {
		has_ruler_flag = evocation_1
		NOT = { has_ruler_flag = evocation_2 }
		NOT = { has_ruler_flag = evocation_3 }
}

is_evocation_2 = {
		has_ruler_flag = evocation_2
		NOT = { has_ruler_flag = evocation_3 }
}

is_evocation_3 = {
		has_ruler_flag = evocation_3
}

is_illusion_1 = {
		has_ruler_flag = illusion_1
		NOT = { has_ruler_flag = illusion_2 }
		NOT = { has_ruler_flag = illusion_3 }
}

is_illusion_2 = {
		has_ruler_flag = illusion_2
		NOT = { has_ruler_flag = illusion_3 }
}

is_illusion_3 = {
		has_ruler_flag = illusion_3
}

is_necromancy_1 = {
		has_ruler_flag = necromancy_1
		NOT = { has_ruler_flag = necromancy_2 }
		NOT = { has_ruler_flag = necromancy_3 }
}

is_necromancy_2 = {
		has_ruler_flag = necromancy_2
		NOT = { has_ruler_flag = necromancy_3 }
}

is_necromancy_3 = {
		has_ruler_flag = necromancy_3
}

is_transmutation_1 = {
		has_ruler_flag = transmutation_1
		NOT = { has_ruler_flag = transmutation_2 }
		NOT = { has_ruler_flag = transmutation_3 }
}

is_transmutation_2 = {
		has_ruler_flag = transmutation_2
		NOT = { has_ruler_flag = transmutation_3 }
}

is_transmutation_3 = {
		has_ruler_flag = transmutation_3
}

precursor_relics_can_spawn = {
	OR = {
		AND = {
			OR = {
				is_year = 1560
				has_global_flag = castellos_is_dead
			}
			REB = {
				NOT = {
					check_variable = {
						which = num_precursor_relics
						value = 5
					}
				}
			}
		}
		
		AND = {
			is_year = 1580
			REB = {
				NOT = {
					check_variable = {
						which = num_precursor_relics
						value = 10
					}
				}
			}
		}
		
		AND = {
			is_year = 1600
			REB = {
				NOT = {
					check_variable = {
						which = num_precursor_relics
						value = 15
					}
				}
			}
		}
		
		AND = {
			is_year = 1620
			REB = {
				NOT = {
					check_variable = {
						which = num_precursor_relics
						value = 20
					}
				}
			}
		}
		
		AND = {
			is_year = 1650
			REB = {
				NOT = {
					check_variable = {
						which = num_precursor_relics
						value = 30
					}
				}
			}
		}
	}
	NOT = {
		trade_goods = precursor_relics
		trade_goods = damestear
		trade_goods = gold
		trade_goods = gems
		trade_goods = mithril
		trade_goods = coal
		has_province_flag = relics_no_spawn
		has_global_flag = max_precursor_relics
		has_terrain = dwarven_hold
		has_terrain = dwarven_hold_surface
		continent = serpentspine
	}
	is_city = yes
}

damestear_can_spawn = {
	OR = {
		AND = {
			is_year = 1450
			REB = {
				NOT = {
					check_variable = {
						which = num_damestear
						value = 3
					}
				}
			}
		}
		
		AND = {
			is_year = 1520
			REB = {
				NOT = {
					check_variable = {
						which = num_damestear
						value = 12
					}
				}
			}
		}
		
		AND = {
			is_year = 1590
			REB = {
				NOT = {
					check_variable = {
						which = num_damestear
						value = 15
					}
				}
			}
		}
		AND = {
			is_year = 1650
			REB = {
				NOT = {
					check_variable = {
						which = num_damestear
						value = 20
					}
				}
			}
		}
	}
	any_owned_province = {
		is_city = yes
		NOT = {
			trade_goods = precursor_relics
			trade_goods = damestear
			trade_goods = gold
			trade_goods = gems
			trade_goods = mithril
			has_province_flag = damestear_no_spawn
			has_province_flag = has_damestear
			has_terrain = dwarven_hold
			has_terrain = dwarven_hold_surface
		}
	}
}

relics_great_ruin = {
	NOT = {
		REB = {
			check_variable = {
				which = num_great_relic
				value = 5
			}
		}
	}
}

ruler_has_max_personalities = {
	calc_true_if = {
		ROOT = {
				ruler_has_personality = just_personality
				ruler_has_personality = righteous_personality
				ruler_has_personality = tolerant_personality
				ruler_has_personality = kind_hearted_personality
				ruler_has_personality = free_thinker_personality
				ruler_has_personality = well_connected_personality
				ruler_has_personality = calm_personality
				ruler_has_personality = careful_personality
				ruler_has_personality = secretive_personality
				ruler_has_personality = intricate_web_weaver_personality
				ruler_has_personality = fertile_personality
				ruler_has_personality = well_advised_personality
				ruler_has_personality = benevolent_personality
				ruler_has_personality = zealot_personality 
				ruler_has_personality = pious_personality
				ruler_has_personality = lawgiver_personality
				ruler_has_personality = midas_touched_personality
				ruler_has_personality = incorruptible_personality
				ruler_has_personality = architectural_visionary_personality
				ruler_has_personality = scholar_personality
				ruler_has_personality = entrepreneur_personality
				ruler_has_personality = industrious_personality
				ruler_has_personality = expansionist_personality
				ruler_has_personality = charismatic_negotiator_personality
				ruler_has_personality = conqueror_personality
				ruler_has_personality = silver_tongue_personality
				ruler_has_personality = tactical_genius_personality
				ruler_has_personality = bold_fighter_personality
				ruler_has_personality = strict_personality
				ruler_has_personality = inspiring_leader_personality
				ruler_has_personality = martial_educator_personality
				ruler_has_personality = navigator_personality
				ruler_has_personality = fierce_negotiator_personality
				ruler_has_personality = babbling_buffoon_personality
				ruler_has_personality = embezzler_personality
				ruler_has_personality = infertile_personality
				ruler_has_personality = drunkard_personality
				ruler_has_personality = sinner_personality
				ruler_has_personality = greedy_personality
				ruler_has_personality = cruel_personality
				ruler_has_personality = craven_personality
				ruler_has_personality = naive_personality
				ruler_has_personality = loose_lips_personality
				ruler_has_personality = obsessive_perfectionist_personality
				ruler_has_personality = malevolent_personality
				ruler_has_personality = immortal_personality   #We count it
				ruler_has_personality = mage_personality
		}
	
		amount = 3
	}
}

has_subterranean_race = {
	custom_trigger_tooltip = {
		tooltip = province_has_subterranean_race_tooltip
		OR = {
			has_province_modifier = dwarven_majority_coexisting
			has_province_modifier = dwarven_majority_integrated
			has_province_modifier = kobold_majority_coexisting
			has_province_modifier = kobold_majority_integrated
			has_province_modifier = goblin_majority_coexisting
			has_province_modifier = goblin_majority_integrated
		}
	}
}

has_ruinborn_culture = {	#fyi culture_group_is_ruinborn exists and is more updated
	culture_group_is_ruinborn = yes
	NOT = { culture = duskers }
	NOT = { culture = starborn }
}

has_fey_loved_culture = {
	custom_trigger_tooltip = {
		tooltip = has_fey_loved_culture_tooltip
		OR = {
			culture = wood_elf
			culture = emerald_orc
			culture_group = eordellon_ruinborn_elf
		}
	}
}

can_no_longer_find_wonders = {
	OR = {
		AND = {
			OR = {
				has_country_modifier = pf_glowing_city
				has_country_modifier = pf_portal_nexus_ruin
			}
			OR = {
				AND = {
					has_country_modifier = pf_glowing_city
					has_global_flag = pf_end_glowing_city_flag_global
				}
				AND = {
					has_country_modifier = pf_portal_nexus_ruin
					has_global_flag = pf_end_portal_nexus_flag_global
				}
				AND = {
					north_america = { type = all has_discovered = ROOT }
					south_america = { type = all has_discovered = ROOT }
				}
			}
		}
		AND = {
			has_country_modifier = pf_dragon_house
			OR = {
				has_global_flag = pf_end_dragon_house_flag_global
				amadia_region = { type = all has_discovered = ROOT }
			}
		}
		AND = {
			has_country_modifier = pf_elfenbride_manse
			OR = {
				has_global_flag = pf_end_elfenbride_manse_flag_global
				AND = {
					rzenta_region = { type = all has_discovered = ROOT }
					forest_of_the_cursed_ones_region = { type = all has_discovered = ROOT }
					dalaire_region = { type = all has_discovered = ROOT }
				}
			}
		}
		AND = {
			has_country_modifier = pf_god_fragment_ruin
			OR = {
				has_global_flag = pf_end_god_fragment_flag_global
				colonial_noruin = { type = all has_discovered = ROOT }
			}
		}
		AND = {
			has_country_modifier = pf_vault_ruin
			OR = {
				has_global_flag = pf_end_vault_ruin_flag_global
				colonial_ynn = { type = all has_discovered = ROOT }
			}
		}
		AND = {
			has_country_modifier = pf_floating_city_crash_site
			OR = {
				has_global_flag = pf_end_floating_city_crash_site_flag_global
				AND = {
					west_effelai_region = { type = all has_discovered = ROOT }
					east_effelai_region = { type = all has_discovered = ROOT }
					south_effelai_region = { type = all has_discovered = ROOT }
					leechdens_region = { type = all has_discovered = ROOT }
				}
			}
		}
	}
}

mil_tech_is_inferior = {
	variable_arithmetic_trigger = {
		export_to_variable = {
			which = root_tech
			value = mil_tech
		}
		export_to_variable = {
			which = from_tech
			value = mil_tech
			who = $tag$
		}
		
		subtract_variable = { root_tech = 1 }
		
		check_variable = {
			which = root_tech
			which = from_tech
		}
	}
}

dip_tech_is_inferior = {
	variable_arithmetic_trigger = {
		export_to_variable = {
			which = root_tech
			value = dip_tech
		}
		export_to_variable = {
			which = from_tech
			value = dip_tech
			who = $tag$
		}
		
		subtract_variable = { root_tech = 1 }
		
		check_variable = {
			which = root_tech
			which = from_tech
		}
	}
}

adm_tech_is_inferior = {
	variable_arithmetic_trigger = {
		export_to_variable = {
			which = root_tech
			value = adm_tech
		}
		export_to_variable = {
			which = from_tech
			value = adm_tech
			who = $tag$
		}
		
		subtract_variable = { root_tech = 1 }
		
		check_variable = {
			which = root_tech
			which = from_tech
		}
	}
}


want_to_decrease_monstrous = {
	if = {
		limit = { has_country_flag = removing_monstrous has_country_modifier = monstrous_nation }
		variable_arithmetic_trigger = {
			export_to_variable = {
				which = ai_monstrous_desire
				value = 0
			}

			#ADD

			#Personality
			if = {
				limit = { ruler_has_personality = free_thinker_personality }
				change_variable = { ai_monstrous_desire = 50 }
			}
			if = {
				limit = { ruler_has_personality = tolerant_personality }
				change_variable = { ai_monstrous_desire = 25 }
			}
			if = {
				limit = { ruler_has_personality = naive_personality }
				change_variable = { ai_monstrous_desire = 25 }
			}
			if = {
				limit = { ruler_has_personality = industrious_personality }
				change_variable = { ai_monstrous_desire = 25 }
			}
			if = {
				limit = { personality = ai_diplomat }
				change_variable = { ai_monstrous_desire = 25 }
			}


			#Time
			if = {
				limit = { current_age = age_of_absolutism }
				change_variable = { ai_monstrous_desire = 10 }
			}
			if = {
				limit = { current_age = age_of_revolutions }
				change_variable = { ai_monstrous_desire = 10 }
			}
			if = {
				limit = { has_institution = enlightenment }
				change_variable = { ai_monstrous_desire = 20 }
			}
	

			#Government
			if = {
				limit = { government = republic }
				change_variable = { ai_monstrous_desire = 10 }
			}

			#Religion
			
			#Situation
			
			#Specific


			#SUBTRACT

			#Personality
			if = {
				limit = { ruler_has_personality = malevolent_personality }
				subtract_variable = { ai_monstrous_desire = 50 }
			}
			if = {
				limit = { ruler_has_personality = zealot_personality }
				subtract_variable = { ai_monstrous_desire = 25 }
			}
			if = {
				limit = { ruler_has_personality = pious_personality }
				subtract_variable = { ai_monstrous_desire = 25 }
			}
			if = {
				limit = { ruler_has_personality = careful_personality }
				subtract_variable = { ai_monstrous_desire = 25 }
			}
			if = {
				limit = { personality = ai_militarist }
				subtract_variable = { ai_monstrous_desire = 25 }
			}

			#Government
			if = {
				limit = { government = tribal }
				subtract_variable = { ai_monstrous_desire = 10 }
			}

			#Religion

			#Situation
			if = {
				limit = { NOT = { stability = 1 } }
				subtract_variable = { ai_monstrous_desire = 10 }
			}
			
			#Specific


			check_variable = { ai_monstrous_desire = 0 } #If the variable is >=0, the AI will want to decrease it's monstrous level
		}
	}
	else = { always = no }
}

has_fort_building_trigger = {
	OR = {
		has_building = fort_15th
		has_building = fort_16th
		has_building = fort_17th
		has_building = fort_18th
		has_building = fort_magic
	}
}

is_free_company = {
	OR = {
		template = merc_rezankand_var_kultoz
	}
}
has_mages_organization_privilege = {
	OR = {
		has_estate_privilege = estate_mages_organization_magisterium
		has_estate_privilege = estate_mages_organization_state
		has_estate_privilege = estate_mages_organization_guilds
		has_estate_privilege = estate_mages_organization_religious
	}
}
is_free_company = {
	OR = {
		template = merc_rezankand_var_kultoz
	}
}

has_adventurers_organization_privilege = {
	OR = {
		has_estate_privilege = estate_adventurers_organization_land_of_adventure
		has_estate_privilege = estate_adventurers_organization_licensed_adventurers
		has_estate_privilege = estate_adventurers_organization_chronicler_grants
	}
}
has_vampire_masquerade = {
	OR = {
		has_estate_privilege = estate_vampires_law_traditional_masquerade
		has_estate_privilege = estate_vampires_law_state_collusion_masquerade
	}
}

has_artificers_organization_privilege = {
	OR = {
		has_estate_privilege = estate_artificers_organization_international_gommo
		has_estate_privilege = estate_artificers_organization_independent_unions
		has_estate_privilege = estate_artificers_organization_state
		has_estate_privilege = estate_artificers_organization_ravelian_control
	}
}

want_to_reduce_vampire_influence = {
	AND = {
		estate_influence = {
			estate = estate_vampires
			influence = 90
		}
		has_estate_privilege = estate_vampires_organization_vampires_lord
	}
	NOT = { has_ruler_flag = is_a_vampire }
}

want_to_increase_vampire_influence = {
	OR = {
		AND = {
			estate_loyalty = {
				estate = estate_vampires
				loyalty = 60
			}
			vampires_rule_the_country = yes
		}
		AND = {
			estate_influence = {
				estate = estate_vampires
				influence = 20
			}
			has_vampire_masquerade = yes
		}
	}
}

want_to_increase_vampire_loyalty = {
	OR = {
		AND = {
			NOT = {
				estate_loyalty = {
					estate = estate_vampires
					loyalty = 30
				}
			}
			estate_influence = {
				estate = estate_vampires
				influence = 60
			}
		}
	}
}

want_to_increase_vampire_land = {
	estate_loyalty = {
		estate = estate_vampires
		loyalty = 50
	}
	crown_land_share = 30
	NOT = {
		estate_territory = {
			estate = estate_vampires
			territory = 20
		}
	}
}

want_to_reduce_vampire_land = {
	OR = {
		AND = {
			NOT = {
				estate_loyalty = {
					estate = estate_vampires
					loyalty = 50
				}
			}
			estate_influence = {
				estate = estate_vampires
				influence = 80
			}
		}
		NOT = { crown_land_share = 30 }
	}
	estate_territory = {
		estate = estate_vampires
		territory = 10
	}
}

vampires_rule_the_country = {
	custom_trigger_tooltip = {
		tooltip = is_a_vampire_tooltip
		has_ruler_flag = is_a_vampire
	}
}


hre_elector_majority = {
	if = {
		limit = { num_of_electors = 7 }
		calc_true_if = {
			all_elector = { preferred_emperor = $tag$ }
			amount = 4
		}
	}
	else_if = {
		limit = { num_of_electors = 5 }
		calc_true_if = {
			all_elector = { preferred_emperor = $tag$ }
			amount = 3
		}
	}
	else_if = {
		limit = { num_of_electors = 3 }
		calc_true_if = {
			all_elector = { preferred_emperor = $tag$ }
			amount = 2
		}
	}
	else_if = {
		limit = { num_of_electors = 1 }
		calc_true_if = {
			all_elector = { preferred_emperor = $tag$ }
			amount = 1
		}
	}
}

has_legitimacy_equivalent = {
	if = {
		limit = { government = monarchy }
		legitimacy = $VAL$
	}
	else_if = {
		limit = { government = republic }
		republican_tradition = $VAL$
	}
	else_if = {
		limit = { government = theocracy }
		if = {
			limit = { has_dlc = "Common Sense" }
			devotion = $VAL$
		}
		else = {
			custom_trigger_tooltip = {
				tooltip = automatic_bypass_tooltip
				always = yes
			}
		}
	}
	else_if = {
		limit = { government = tribal }
		if = {
			limit = { has_dlc = "The Cossacks" }
			horde_unity = $VAL$
		}
		else = { legitimacy = $VAL$ }
	}
}

has_professionalism_equivalent = {
	if = {
		limit = { has_dlc = "Cradle of Civilization" }
		army_professionalism = $VAL$
	}
	else = {
		custom_trigger_tooltip = {
			tooltip = automatic_bypass_tooltip
			always = yes
		}
	}
}

is_monstrous_horde = {
	OR = {
		has_reform = greentide_horde
		has_reform = settled_horde
		has_reform = roaming_horde
		has_reform = emerald_horde
		has_reform = graytide_horde
		has_reform = dwarovar_squatter
		has_reform = dwarovar_warband
	}
}

eoa_is_dismantled = {
	custom_trigger_tooltip = {
		tooltip = eoa_dismantled_tooltip
		NOT = {
			hre_size = 1
			exists = Z01 #Empire of Anbennar
		}
	}
}

has_coastal_defence_building = {
	OR = {
		has_building = coastal_defence
		has_building = naval_battery
	}
}

has_any_building_trigger = {
	OR = {
		has_tax_building_trigger = yes
		has_coastal_defence_building = yes
		has_fort_building_trigger = yes
		has_manpower_building_trigger = yes
		has_production_building_trigger = yes
		has_dock_building_trigger = yes
		has_trade_building_trigger = yes
		has_shipyard_building_trigger = yes
		has_forcelimit_building_trigger = yes
		has_dock_building_trigger = yes
		has_manufactory_trigger = yes
		has_courthouse_building_trigger = yes
		has_building = university
	}
}

has_raj_mandate = {
	custom_trigger_tooltip = {
		tooltip = has_raj_mandate_trigger_tt
		OR = {
			has_country_modifier = raj_mandate_raja_protection
			has_country_modifier = raj_mandate_right_to_expansion
			has_country_modifier = raj_mandate_guaranteed_autonomy
			has_country_modifier = raj_mandate_mercantile_preference
			has_country_modifier = raj_mandate_sanctioned_armoury
			has_country_modifier = raj_mandate_ministry_lectures
			has_country_modifier = raj_mandate_senapti_primacy
			has_country_modifier = raj_mandate_extended_prabhi_privileges
			has_country_modifier = raj_mandate_territorial_limits
		}
	}
}


heir_has_max_personalities = {
	calc_true_if = {
		ROOT = {
				heir_has_personality = just_personality
				heir_has_personality = righteous_personality
				heir_has_personality = tolerant_personality
				heir_has_personality = kind_hearted_personality
				heir_has_personality = free_thinker_personality
				heir_has_personality = well_connected_personality
				heir_has_personality = calm_personality
				heir_has_personality = careful_personality
				heir_has_personality = secretive_personality
				heir_has_personality = intricate_web_weaver_personality
				heir_has_personality = fertile_personality
				heir_has_personality = well_advised_personality
				heir_has_personality = benevolent_personality
				heir_has_personality = zealot_personality 
				heir_has_personality = pious_personality
				heir_has_personality = lawgiver_personality
				heir_has_personality = midas_touched_personality
				heir_has_personality = incorruptible_personality
				heir_has_personality = architectural_visionary_personality
				heir_has_personality = scholar_personality
				heir_has_personality = entrepreneur_personality
				heir_has_personality = industrious_personality
				heir_has_personality = expansionist_personality
				heir_has_personality = charismatic_negotiator_personality
				heir_has_personality = conqueror_personality
				heir_has_personality = silver_tongue_personality
				heir_has_personality = tactical_genius_personality
				heir_has_personality = bold_fighter_personality
				heir_has_personality = strict_personality
				heir_has_personality = inspiring_leader_personality
				heir_has_personality = martial_educator_personality
				heir_has_personality = navigator_personality
				heir_has_personality = fierce_negotiator_personality
				heir_has_personality = babbling_buffoon_personality
				heir_has_personality = embezzler_personality
				heir_has_personality = infertile_personality
				heir_has_personality = drunkard_personality
				heir_has_personality = sinner_personality
				heir_has_personality = greedy_personality
				heir_has_personality = cruel_personality
				heir_has_personality = craven_personality
				heir_has_personality = naive_personality
				heir_has_personality = loose_lips_personality
				heir_has_personality = obsessive_perfectionist_personality
				heir_has_personality = malevolent_personality
				heir_has_personality = immortal_personality   #We count it
				heir_has_personality = mage_personality
		}
	
		amount = 3
	}
}

consort_has_max_personalities = {
	calc_true_if = {
		ROOT = {
				consort_has_personality = just_personality
				consort_has_personality = righteous_personality
				consort_has_personality = tolerant_personality
				consort_has_personality = kind_hearted_personality
				consort_has_personality = free_thinker_personality
				consort_has_personality = well_connected_personality
				consort_has_personality = calm_personality
				consort_has_personality = careful_personality
				consort_has_personality = secretive_personality
				consort_has_personality = intricate_web_weaver_personality
				consort_has_personality = fertile_personality
				consort_has_personality = well_advised_personality
				consort_has_personality = benevolent_personality
				consort_has_personality = zealot_personality 
				consort_has_personality = pious_personality
				consort_has_personality = lawgiver_personality
				consort_has_personality = midas_touched_personality
				consort_has_personality = incorruptible_personality
				consort_has_personality = architectural_visionary_personality
				consort_has_personality = scholar_personality
				consort_has_personality = entrepreneur_personality
				consort_has_personality = industrious_personality
				consort_has_personality = expansionist_personality
				consort_has_personality = charismatic_negotiator_personality
				consort_has_personality = conqueror_personality
				consort_has_personality = silver_tongue_personality
				consort_has_personality = tactical_genius_personality
				consort_has_personality = bold_fighter_personality
				consort_has_personality = strict_personality
				consort_has_personality = inspiring_leader_personality
				consort_has_personality = martial_educator_personality
				consort_has_personality = navigator_personality
				consort_has_personality = fierce_negotiator_personality
				consort_has_personality = babbling_buffoon_personality
				consort_has_personality = embezzler_personality
				consort_has_personality = infertile_personality
				consort_has_personality = drunkard_personality
				consort_has_personality = sinner_personality
				consort_has_personality = greedy_personality
				consort_has_personality = cruel_personality
				consort_has_personality = craven_personality
				consort_has_personality = naive_personality
				consort_has_personality = loose_lips_personality
				consort_has_personality = obsessive_perfectionist_personality
				consort_has_personality = malevolent_personality
				consort_has_personality = immortal_personality   #We count it
				consort_has_personality = mage_personality
		}
	
		amount = 3
	}
}

is_technocracy = {
	OR = {
		has_reform = technocracy_republic_reform
		has_country_flag = is_technocratic_gov
	}
}

ruler_is_immortal = {
	OR = {
		has_country_flag = vampire_ruler_has_coffin
		has_country_flag = lich_ruler_has_phylactery
		has_ruler_flag = is_a_secret_homunculus
		has_ruler_flag = is_a_exposed_homunculus
		ruler_culture = homunculi
	}
}
